#version 460 core
#extension GL_EXT_ray_tracing : enable

struct Vertex {
    vec3 position;
    vec3 color;
    vec3 normal;
};

layout(set = 0, binding = 0) buffer Vertices {
    Vertex vertices[];
} vertexBuffer;



layout(set = 0, binding = 1) uniform Matrices {
    mat4 modelMatrix;
} matrices;

layout(binding = 2, set = 0) uniform accelerationStructureEXT blas;

layout(set = 0, binding = 3) uniform CameraData {
    vec3 cameraPosition;
    mat4 viewMatrix;
    mat4 projectionMatrix;
} cameraData;

vec3 calculateRayDirection() {
    // Calcular la dirección del rayo basándose en la posición del píxel y la cámara
    // Esta función necesitará ser implementada de acuerdo a tu sistema de coordenadas y la configuración de la cámara
    return vec3(0, 0, -1); // Esto es solo un ejemplo
}

void main() {
    // Calcular la dirección del rayo basándose en la posición de la cámara y el pixel actual
    //vec3 rayOrigin = cameraPosition;
    //vec3 rayDirection = calculateRayDirection(); // Necesitarás implementar esta función

    // Lanzar el rayo
    // Aquí tendrás que adaptar esta llamada según tu implementación y tus necesidades
    //traceRayEXT(...);

    // Aquí implementarás lo que suceda después de lanzar el rayo
}


